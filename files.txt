This file describes file formats for sources to this builder:

First, there are several files without a "format", which have a meaning:
image/splash.png	- splash screen shown during initial game load
seq/*.gif		- sequences as animated gif
tile/*-hard.png		- hardness of tiles, every pixel must be black, white or blue (0,0,255), for not hard, wall and water respectively.
tile/*-tile.png		- tile map which uses given hardness (there can be -hard files without -tile files, but not -tile files without -hard files)
music/*.mid		- music which can be named by its filename
sound/[nn-]*.wav	- sounds which can be named by their filename (excluding nn-); if nn is given, this is the slot with which they will be loaded
info.txt		- Info about the dmod; copied into dmod.diz.

Then there are files which have a format. These use lines of the form "key = value". spaces around key and before value are ignored. The order of the keys is not important. Lines starting with (whitespace and) # are ignored. Empty lines separate blocks and are only allowed if specified in this file. Many keys are optional, defaults are given between square brackets. Sequences, sounds and music and brains are referenced by name. The available brains are:
brains = ['none', 'human', 'bounce', 'duck', 'pig', 'mark', 'repeat', 'play', 'text', 'bisshop', 'rook', 'missile', 'resize', 'pointer', 'button', 'shadow', 'person', 'spark']

title.txt
	Contains information about the title screen. The screen consists of an optional background color, a background, sprites, buttons and music. It is also possible to specify a script to be run, for maximum configurability.
	
	music [no music]	: name of midi file to play on the title screen
	color [0]		: background fill color
	background [no image]	: background image, 640x480
	pointer[special 8]	: sequence and frame to use for pointer
	sprites[0]		: number of sprites, excluding buttons
	sprite-n		: n from 1 to sprites, information about sprite (brain and script can be omitted): sequence frame x y brain script
	buttons[required]	: number of buttons
	button-n		: n from 1 to buttons, information about button: sequence frame x y script
	run[no script]		: script to run after start.c is finished

seq/external.txt
	Contains information about sequences from dink which can be used without providing the graphics.

	name			: name of a sequence, followed by code file frames special repeat defaults, which means:
		code	: code to use for this sequence, or - to automatically assign one
		file	: file name of the image files, excluding the number (for example but3-)
		frames	: number of frames including generated, 1 for unknown
		special	: special frame
		repeat	: r if repeating, n if not
		defaults: one of the words black, leftalign or noanim, or a list of 7 numbers, as described below, or only a delay, or a list of two number (sequence and frame), optionally followed by a delay
	name:preload		: filename of sequence to preload into the sequence before loading the real one
	name:n			: description of frame n, a list of 7 numbers, which are x y left top right bottom delay; x y are the position of the hot spot, ltrb is the hardness box from the hot spot, delay is the number of ms to show this frame or a target sequence code, frame and delay

seq/info.txt
	Contains information about all sequences. It contains a list of blocks, separated by empty lines. Each block describes exactly one sequence. External sequences can be defined here to give extra information.

	external							: name of the sequence in external.txt (required for external, forbidden otherwise)
	name								: name of the sequence a file name.gif must exist (forbidden for external, required otherwise)
	frames[detected]						: number of frames, including generated frames
	special[1]							: special frame (the one which hits during an attack)
	load-now[no]							: if yes, loads the sequence in cache immediately
	code[from external or auto]					: use this code for this sequence
	type[normal]							: normal, black, leftalign or noanim
	delay[detected or 30]						: default delay between frames
	repeat[no]							: if yes, auto-repeat this sequence
	box[w/2 h*8/10 -w*4/10 -h/10 w*4/10 h/10]			: default hot spot and hardness box
	seq-n[required for n > real frames, forbidden otherwise]	: name of sequence from which frame n is copied
	frame-n[required for n > real frames, forbidden otherwise]	: frame which is copied as n
	box-n								: hot spot and hardness box for this frame
	delay-n								: number of ms that this frame is used

world/nnn-xx-yy/info.txt
	Contains tile and hardness info about a screen. nnn is the number of the screen, xx and yy are the coordinates. They must match. This file starts with 8 lines of 12 sets of three values: a tiles file and two coordinates in it. These define the background tiles in the screen. After this, some key-value-pairs follow. No empty line is allowed between them.

	hard[from tiles]	: if given, hardness data is read from this file instead of what comes with the tiles used
	script[none]		: the base script for the room; it is run when entering the room
	music[no music]		: the music to start playing when entering the room (if it isn't already playing)
	indoor[no]		: if yes, mark this room as indoor for mapping purposes

world/nnn-xx-yy/sprite/name[-nn].txt
	Contains information about a sprite. The -nn suffix is used to allow several sprites of the same type. The name, excluding the -nn, is used as the sequence name (unless overridden).

	x[required]		: x coordinate of the sprite
	y[required]		: y coordinate of the sprite
	seq[base of name]	: sequence
	frame[1]		: frame
	type[1]			: 0 for background, 1 for person or sprite, 3 for invisible
	size[100]		: percentage of native size
	active[yes]		: if no, sprite is not active
	brain[bisshop]		: brain
	script[none]		: script
	speed[1]		: speed: 1 is normal, 2 is herb boots
	base_walk		: animation for walking
	base_idle		: animation for standing still
	base_attack		: animation for attacking
	base_die		: animation for dying
	timer[33]		: delay: larger is slower
	que[0]			: offset of depth
	hard[yes]		: if no, sprite is not hard
	left, top, right, bottom: if set and not 0, override sprite hardness box
	warp[no warp]		: if set, it must be three numbers separated by commas: map, x, y
	touch_seq		: sequence to play when the sprite is touched
	gold			: general-purpose variable not used by the game
	hitpoints[0]		: life counter of sprite, it is immortal if set to 0
	strength[0]		: not used
	defense[0]		: defense
	exp[0]			: experience when killed
	sound[no sound]		: sound which is played repeatedly as long as this sprite is alive
	vision[0]		: vision for this sprite
	nohit[no]		: if yes, sprite cannot be hit
	touch_damage[0]		: damage when touched

script/*.c
	These files are similar to dinkc files, but they are much more like real C:
	- You can use normal expressions.
	- You can put spaces wherever you like.
	- You can use for and while.
	- You cannot use goto.
	- Variables do not start with &, except in printed strings.
	- Choice is a function with a variable number of arguments. Each time there may be a test (bool) and there must be a string.
	- sequences, brains, music and sounds are referenced by name, not number. (not implemented yet)
